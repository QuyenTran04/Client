// üìÅ Client/src/lib/utils.jsx

// H√†m g·ªôp class Tailwind
export function cn(...classes) {
  return classes.filter(Boolean).join(" ");
}

// üé® H√†m tr·∫£ v·ªÅ m√†u theo m√¥n h·ªçc
export function getSubjectColor(subject) {
  const colors = {
    math: "bg-blue-100 text-blue-800",
    physics: "bg-green-100 text-green-800",
    chemistry: "bg-purple-100 text-purple-800",
    literature: "bg-pink-100 text-pink-800",
    english: "bg-yellow-100 text-yellow-800",
    history: "bg-red-100 text-red-800",
    geography: "bg-teal-100 text-teal-800",
    biology: "bg-lime-100 text-lime-800",
  };
  return colors[subject?.toLowerCase()] || "bg-gray-100 text-gray-800";
}

// üé• Chuy·ªÉn URL YouTube sang URL nh√∫ng (embed)
export function getYouTubeEmbedUrl(url) {
  if (!url) return null;
  try {
    const u = new URL(url);
    // youtu.be/<id>
    if (u.hostname === "youtu.be") {
      return `https://www.youtube.com/embed/${u.pathname.slice(1)}`;
    }
    // www.youtube.com/watch?v=<id>
    if (u.hostname.includes("youtube.com")) {
      const v = u.searchParams.get("v");
      if (v) return `https://www.youtube.com/embed/${v}`;
      // www.youtube.com/embed/<id>
      if (u.pathname.startsWith("/embed/")) return url;
    }
  } catch {
    return null;
  }
  return null;
}

// ü§ñ H√†m c·∫•u h√¨nh tr·ª£ l√Ω AI (d√πng cho Companion)
export function configureAssistant(subject) {
  const configs = {
    math: {
      personality: "T√¥i l√† tr·ª£ l√Ω to√°n h·ªçc, gi·∫£i th√≠ch chi ti·∫øt c√°c b√†i to√°n.",
      tone: "logic v√† s√∫c t√≠ch",
    },
    literature: {
      personality: "T√¥i l√† tr·ª£ l√Ω vƒÉn h·ªçc, gi√∫p b·∫°n ph√¢n t√≠ch t√°c ph·∫©m v√† vi·∫øt vƒÉn hay h∆°n.",
      tone: "·∫•m √°p v√† s√°ng t·∫°o",
    },
    english: {
      personality: "T√¥i l√† tr·ª£ l√Ω ti·∫øng Anh, gi√∫p b·∫°n luy·ªán ng·ªØ ph√°p v√† giao ti·∫øp.",
      tone: "th√¢n thi·ªán v√† kh√≠ch l·ªá",
    },
    physics: {
      personality: "T√¥i l√† tr·ª£ l√Ω v·∫≠t l√Ω, gi√∫p b·∫°n hi·ªÉu b·∫£n ch·∫•t c√°c hi·ªán t∆∞·ª£ng.",
      tone: "khoa h·ªçc v√† c·ª• th·ªÉ",
    },
  };
  return configs[subject?.toLowerCase()] || {
    personality: "T√¥i l√† tr·ª£ l√Ω h·ªçc t·∫≠p t·ªïng h·ª£p.",
    tone: "th√¢n thi·ªán v√† chuy√™n nghi·ªáp",
  };
}
